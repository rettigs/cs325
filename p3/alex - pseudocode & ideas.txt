Project 3
initialize best path

test
	T[i,j] = A[i,j]
	If i > 0
		If T[i-1,j] < 1 then A[i,j]
	If j > 0
		If T[i,j-1] < 1 then A[i,j]
	Return T[i,j]
    

Recursive solution: O(factorial of some sort)
Dynamic solution:   O(cij) = O(n)

For dynamic solution:
Idea is start in upper left corner i = 0, j = 0
Run through test to get best path

load A[x,y] with values on board
initialize ibest, jbest, T[x,y] with 0
for i = 0 ... y
	for j = 0 ... x
			T[i,j] <- A[i,j]
			if i > 0
				if T[i-1,j] + A[i,j] > T[i,j]
					T[i,j] <- T[i-1,j] + A[i,j]
			if j > 0
				if T[i,j-1] + A[i,j] > T[i,j]
					T[i,j] <- T[i,j-1] + A[i,j]
			if T[i,j] > T[ibest,jbest]
				ibest <- i
				jbest <- j
