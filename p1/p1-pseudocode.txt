getVisibleAlgorithm1(slopes[], intercepts[])
{
	visibility[] = [True for length(slopes)]
	for (j = 0; j < length(slopes); j++)
		for (i = j + 1; i < length(slopes); i++)
			for (k = i + 1; k < length(slopes); k++) {
				jkIntersectionY = slopes[j] * (intercepts[j] - intercepts[k]) + intercepts[j] * (slopes[k] - slopes[j])
				i_Y = slopes[i] * (intercepts[j] - intercepts[k]) + intercepts[i] * (slopes[k] - slopes[j])
				if jkIntersectionY > i_Y
					visibility[i] = False
			}
	return visibility
}

getVisibleAlgorithm2(slopes[], intercepts[])
{
	visibility[] = [True for length(slopes)]
	for j in length(slopes)
		for i in length(slopes)
			for k in length(slopes)
				# break if line has already been marked as not visible
				if visibility[i] != False {
					# compute intersection
					jkIntersectionY = slopes[j] * (intercepts[j] - intercepts[k]) + intercepts[j] * (slopes[k] - slopes[j])
					i_Y = slopes[i] * (intercepts[j] - intercepts[k]) + intercepts[i] * (slopes[k] - slopes[j])
					if jkIntersectionY > i_Y
						visibility[i] = False
				}
	return visibility
}